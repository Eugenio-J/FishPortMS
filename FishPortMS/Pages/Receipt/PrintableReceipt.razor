@inject IClientReceiptService ClientReceiptService
@inject ILocalStorageService LocalStorageService
@inject IClientMasterProductService ClientProductService
@inject NavigationManager NavigationManager
@inject IJSRuntime JavaScript

<style>

    .mud-table-sticky-header * .mud-table-root .mud-table-head * .mud-table-cell {
        font-family: 'Poppins' !important;
        font-weight: 500 !important;
        letter-spacing: -.5px !important;
        font-size: 12px !important;
        color: #42546A !important;
    }

    .mud-table-dense * .mud-table-row .mud-table-cell {
        font-family: 'Poppins' !important;
        font-weight: 400 !important;
        letter-spacing: -.5px !important;
        font-size: 12px !important;
        color: #42546A !important;
    }

</style>

<div class="mx-2 mx-sm-0 px-2 px-sm-4 pb-4" style="">

    <div id="printableContent">

        <div class="pb-4">

            <div class="d-flex flex-column">

                <div class="receipt-header">
                    <span class="receipt-title">
                        PAGADO
                    </span>
                    <div class="d-flex flex-column align-items-center mb-3">
                        <img src="images/sys_imgs/jomar_logo.png" class="logo" />
                    </div>
                </div>

                <div style="border-bottom: 0.3px solid #4E5E78;"/>

                <div class="m-3">
                    <MudText Typo="Typo.subtitle2" Class="input-label mb-2">Date: @Receipt.DateCreated?.ToString("MMMM d, yyyy")</MudText>
                    <MudText Typo="Typo.subtitle2" Class="input-label mb-2">Notes</MudText>
                    <MudTextField
                        Class="mb-5"
                        Lines="5"
                        HelperText="Utang, Kulang, Hulog..."
                        @bind-Value="Receipt.Notes"
                        InputType="InputType.Text"
                        Variant="Variant.Outlined"
                        Margin="Margin.Dense"
                        ReadOnly />

                     <MudText Typo="Typo.subtitle2" Class="input-label mb-2">Buy and Sell Name</MudText>
                     <MudTextField 
                        Class="mb-5"
                        @bind-Value="Receipt.BSname"
                        InputType="InputType.Text"
                        Variant="Variant.Outlined"
                        Margin="Margin.Dense"
                        ReadOnly />

                     <MudText Typo="Typo.subtitle2" Class="input-label mb-2">Cashier</MudText>

                     <MudTextField
                        Class="mb-5"
                        @bind-Value="Receipt.CashierName"
                        InputType="InputType.Text"
                        Variant="Variant.Outlined"
                        Margin="Margin.Dense"
                        ReadOnly />


                     <MudText Typo="Typo.subtitle2" Class="input-label mb-2">Percentage</MudText>

                     <MudTextField
                         Class="mb-5"
                        @bind-Value="Receipt.DeductedPercentage"
                        InputType="InputType.Number"
                        Variant="Variant.Outlined"
                        Margin="Margin.Dense"         
                        ReadOnly />
                </div>

             
            </div>
        </div>


        @if (Receipt.GetReceiptItemDTO.Any())
        {
            var groupItem = Receipt.GetReceiptItemDTO.GroupBy(x => x.ProductName);

            foreach (var group in groupItem)
            {

                var totalSubtotal = group.Sum(x => x.Subtotal);

                <div class="m-3">
                    <MudGrid Class="mb-1">
                        <MudItem xs="12">
                            <h4>@group.Key</h4> <!-- Group header: ProductName -->
                            <MudTable Items="group" FixedHeader="true" Dense="true" Breakpoint="Breakpoint.None" Style="padding-bottom: 0px;" CellClass="text-center py-1">
                                <HeaderContent>
                                    <MudTh>Weight (KG)</MudTh>
                                    <MudTh>Current Price</MudTh>
                                    <MudTh>Subtotal</MudTh>
                                </HeaderContent>
                                <RowTemplate>
                                    <MudTd DataLabel="Kilo">@context.Weight</MudTd>
                                        <MudTd DataLabel="Price">@context.CurrentPrice</MudTd>
                                        <MudTd DataLabel="Subtotal">@context.Subtotal</MudTd> <!-- Calculated Subtotal -->
                                    </RowTemplate>
                                    <FooterContent>
                                        <MudTFootRow Class="bold-text text-end">
                                            <MudTd>Total Kilo: @string.Format("{0:N2}", group.Sum(x => x.Weight))</MudTd>
                                            <MudTd>Total Benta: @string.Format("{0:N2}", group.Sum(x => x.Subtotal))</MudTd>
                                        </MudTFootRow>
                                    </FooterContent>
                                </MudTable>
                            </MudItem>
                        </MudGrid>
                </div>
            }
        }

        <div class="m-3">

        <SalesBreakdown Summary="ReceiptSummaryDTO" />

        </div>
        </div>
    </div>


@code {

    [Parameter] public CreateReceiptDTO Receipt { get; set; }
    [Parameter] public ReceiptSummaryDTO ReceiptSummaryDTO { get; set; } = new ReceiptSummaryDTO();
    protected override async Task OnInitializedAsync()
    {
        await JavaScript.InvokeVoidAsync("print_pdf", $"PAGADO_{Receipt.BSname}_{Receipt.DateCreated:MMMMd_yyyy}");
    }
}
