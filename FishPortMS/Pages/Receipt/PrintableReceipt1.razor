@inject IJSRuntime JavaScript

<div class="receipt-wrapper" style="">
    <div id="printableContent">
        <div class="receipt-container">
            
            <!-- Enhanced Header Section -->
            <div class="receipt-header-section">
                <div class="header-content">
                    <div class="header-left">
                        <MudIcon Icon="Icons.Material.Filled.Receipt" Size="Size.Large" Class="receipt-icon" />
                        <div class="header-text">
                            <MudText Typo="Typo.h4" Class="receipt-title">Receipt Details</MudText>
                            <MudText Typo="Typo.body2" Class="receipt-subtitle">Transaction Information</MudText>
                        </div>
                    </div>
                    <div class="header-right">
                        <MudChip T="string" Icon="Icon.Material.Filled.CalendarToday" Size="Size.Small" Variant="Variant.Outlined" Class="date-chip">
                            @Receipt.DateCreated?.ToString("MMMM d, yyyy")
                        </MudChip>
                    </div>
                </div>
            </div>

            <!-- Enhanced Basic Information Card -->
            <MudCard Class="info-card mb-4" Elevation="2">
                <MudCardHeader>
                    <CardHeaderContent>
                        <div class="card-header-content">
                            <MudIcon Icon="Icons.Material.Filled.Info" Class="header-icon" />
                            <MudText Typo="Typo.h6" Class="card-title">Basic Information</MudText>
                        </div>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent Class="card-content-padding">
                    <MudGrid Spacing="3">
                        <!-- Notes Field -->
                        <MudItem xs="12" md="6">
                            <div class="input-group">
                                <MudText Typo="Typo.subtitle2" Class="enhanced-label">
                                    <MudIcon Icon="Icons.Material.Filled.Notes" Size="Size.Small" Class="label-icon" />
                                    Notes
                                </MudText>
                                <MudTextField 
                                    Class="enhanced-textfield"
                                    Lines="4"
                                    HelperText="Utang, Kulang, Hulog..."
                                    @bind-Value="Receipt.Notes"
                                    InputType="InputType.Text"
                                    Variant="Variant.Outlined"
                                    Margin="Margin.Dense"
                                    ReadOnly />
                            </div>
                        </MudItem>

                        <!-- Buy and Sell Name -->
                        <MudItem xs="12" md="6">
                            <div class="input-group">
                                <MudText Typo="Typo.subtitle2" Class="enhanced-label">
                                    <MudIcon Icon="Icons.Material.Filled.Business" Size="Size.Small" Class="label-icon" />
                                    Buy and Sell Name
                                </MudText>
                                <MudTextField 
                                    Class="enhanced-textfield"
                                    @bind-Value="Receipt.BSname"
                                    InputType="InputType.Text"
                                    Variant="Variant.Outlined"
                                    Margin="Margin.Dense"               
                                    ReadOnly />
                            </div>
                        </MudItem>

                        <!-- Cashier -->
                        <MudItem xs="12" md="6">
                            <div class="input-group">
                                <MudText Typo="Typo.subtitle2" Class="enhanced-label">
                                    <MudIcon Icon="Icons.Material.Filled.Person" Size="Size.Small" Class="label-icon" />
                                    Cashier
                                </MudText>
                                <MudTextField 
                                    Class="enhanced-textfield"
                                    @bind-Value="Receipt.CashierName"
                                    InputType="InputType.Text"
                                    Variant="Variant.Outlined"
                                    Margin="Margin.Dense"
                                    ReadOnly />
                            </div>
                        </MudItem>

                        <!-- Percentage -->
                        <MudItem xs="12" md="6">
                            <div class="input-group">
                                <MudText Typo="Typo.subtitle2" Class="enhanced-label">
                                    <MudIcon Icon="Icons.Material.Filled.Percent" Size="Size.Small" Class="label-icon" />
                                    Percentage
                                </MudText>
                                <MudTextField
                                    Class="enhanced-textfield"
                                    @bind-Value="Receipt.DeductedPercentage"
                                    InputType="InputType.Number"
                                    Variant="Variant.Outlined"
                                    Margin="Margin.Dense"
                                    ReadOnly />
                            </div>
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
            </MudCard>

            <!-- Enhanced Products Section -->
            @if (Receipt.GetReceiptItemDTO.Any())
            {
                var groupItem = Receipt.GetReceiptItemDTO.GroupBy(x => x.ProductName);

                <div class="products-section">
                    <div class="section-header">
                        <MudText Typo="Typo.h5" Class="section-title">
                            <MudIcon Icon="Icons.Material.Filled.Inventory" Class="section-icon" />
                            Products & Items
                        </MudText>
                        <MudChip T="string" Size="Size.Small" Variant="Variant.Outlined" Class="item-count-chip">
                            @Receipt.GetReceiptItemDTO.Count() Items
                        </MudChip>
                    </div>

                    @foreach (var group in groupItem)
                    {
                        var totalSubtotal = group.Sum(x => x.Subtotal);
                        var totalWeight = group.Sum(x => x.Weight);

                        <MudCard Class="product-group-card mb-4" Elevation="3">
                            <MudCardHeader Class="product-header">
                                <CardHeaderContent>
                                    <div class="product-header-content">
                                        <div class="product-info">
                                            <MudText Typo="Typo.h6" Class="product-name">@group.Key</MudText>
                                            <MudText Typo="Typo.body2" Class="product-count">@group.Count() entries</MudText>
                                        </div>
                                        <div class="product-totals">
                                            <MudChip T="string" Icon="Icons.Material.Filled.Scale" Size="Size.Small" Class="total-chip weight-chip">
                                                @string.Format("{0:N2}", totalWeight) KG
                                            </MudChip>
                                            <MudChip T="string" Icon="Icons.Material.Filled.AttachMoney" Size="Size.Small" Class="total-chip amount-chip">
                                                ₱@string.Format("{0:N2}", totalSubtotal)
                                            </MudChip>
                                        </div>
                                    </div>
                                </CardHeaderContent>
                            </MudCardHeader>
                            
                            <MudCardContent Class="table-content">
                                <MudTable Items="group" 
                                         FixedHeader="true" 
                                         Dense="false" 
                                         Breakpoint="Breakpoint.None" 
                                         Class="enhanced-table"
                                         HeaderClass="table-header"
                                         RowClass="table-row">
                                    <HeaderContent>
                                        <MudTh Class="weight-column">
                                            <div class="header-cell">
                                                <MudIcon Icon="Icons.Material.Filled.FitnessCenter" Size="Size.Small" />
                                                Weight (KG)
                                            </div>
                                        </MudTh>
                                        <MudTh Class="price-column">
                                            <div class="header-cell">
                                                <MudIcon Icon="Icons.Material.Filled.PriceTag" Size="Size.Small" />
                                                Current Price
                                            </div>
                                        </MudTh>
                                        <MudTh Class="subtotal-column">
                                            <div class="header-cell">
                                                <MudIcon Icon="Icons.Material.Filled.Calculate" Size="Size.Small" />
                                                Subtotal
                                            </div>
                                        </MudTh>
                                    </HeaderContent>
                                    <RowTemplate>
                                        <MudTd DataLabel="Weight" Class="data-cell weight-data">
                                            @string.Format("{0:N2}", context.Weight)
                                        </MudTd>
                                        <MudTd DataLabel="Price" Class="data-cell price-data">
                                            ₱@string.Format("{0:N2}", context.CurrentPrice)
                                        </MudTd>
                                        <MudTd DataLabel="Subtotal" Class="data-cell subtotal-data">
                                            <MudText Class="subtotal-amount">₱@string.Format("{0:N2}", context.Subtotal)</MudText>
                                        </MudTd>
                                    </RowTemplate>
                                    <FooterContent>
                                        <MudTFootRow Class="table-footer">
                                            <MudTd colspan="3">
                                                <div class="footer-summary">
                                                    <div class="summary-item">
                                                        <MudIcon Icon="Icons.Material.Filled.Scale" Size="Size.Small" />
                                                        <span class="summary-label">Total Weight:</span>
                                                        <span class="summary-value weight-total">@string.Format("{0:N2}", totalWeight) KG</span>
                                                    </div>
                                                    <div class="summary-divider"></div>
                                                    <div class="summary-item">
                                                        <MudIcon Icon="Icons.Material.Filled.AttachMoney" Size="Size.Small" />
                                                        <span class="summary-label">Total Amount:</span>
                                                        <span class="summary-value amount-total">₱@string.Format("{0:N2}", totalSubtotal)</span>
                                                    </div>
                                                </div>
                                            </MudTd>
                                        </MudTFootRow>
                                    </FooterContent>
                                </MudTable>
                            </MudCardContent>
                        </MudCard>
                    }
                </div>
            }

            <!-- Sales Breakdown Section -->
            <div class="breakdown-section">
                <SalesBreakdown Summary="ReceiptSummaryDTO" />
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter] public CreateReceiptDTO Receipt { get; set; }
    [Parameter] public ReceiptSummaryDTO ReceiptSummaryDTO { get; set; } = new ReceiptSummaryDTO();
    protected override async Task OnInitializedAsync()
    {
        await JavaScript.InvokeVoidAsync("print_pdf", $"PAGADO_{Receipt.BSname}_{Receipt.DateCreated:MMMMd_yyyy}");
    }
}

<style>
    /* Enhanced Receipt Styling */
    .receipt-wrapper {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .receipt-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        min-height: 100vh;
    }

    /* Enhanced Header */
    .receipt-header-section {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        border-radius: 12px;
        padding: 24px;
        margin-bottom: 24px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .header-left {
        display: flex;
        align-items: center;
        gap: 16px;
    }

    .receipt-icon {
        color: white !important;
        font-size: 2.5rem !important;
    }

    .header-text .receipt-title {
        color: white !important;
        font-weight: 600 !important;
        margin-bottom: 4px !important;
    }

    .header-text .receipt-subtitle {
        color: rgba(255, 255, 255, 0.8) !important;
        margin: 0 !important;
    }

    .date-chip {
        background: rgba(255, 255, 255, 0.1) !important;
        color: white !important;
        border-color: rgba(255, 255, 255, 0.3) !important;
    }

    /* Enhanced Info Card */
    .info-card {
        border-radius: 12px !important;
        border: none !important;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08) !important;
        background: white !important;
    }

    .card-header-content {
        display: flex;
        align-items: center;
        gap: 12px;
    }

    .header-icon {
        color: #667eea !important;
        font-size: 1.5rem !important;
    }

    .card-title {
        color: #2d3748 !important;
        font-weight: 600 !important;
        margin: 0 !important;
    }

    .card-content-padding {
        padding: 24px !important;
    }

    .input-group {
        margin-bottom: 20px;
    }

    .enhanced-label {
        display: flex !important;
        align-items: center !important;
        gap: 8px !important;
        margin-bottom: 8px !important;
        color: #4a5568 !important;
        font-weight: 500 !important;
    }

    .label-icon {
        color: #667eea !important;
    }

    .enhanced-textfield {
        background: #f7fafc;
        border-radius: 8px;
    }

    /* Products Section */
    .products-section {
        margin-bottom: 24px;
    }

    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        padding: 16px 0;
    }

    .section-title {
        display: flex !important;
        align-items: center !important;
        gap: 12px !important;
        color: #2d3748 !important;
        font-weight: 600 !important;
        margin: 0 !important;
    }

    .section-icon {
        color: #667eea !important;
        font-size: 1.8rem !important;
    }

    .item-count-chip {
        background: #e6fffa !important;
        color: #047857 !important;
        border-color: #10b981 !important;
    }

    /* Product Group Cards */
    .product-group-card {
        border-radius: 12px !important;
        border: none !important;
        box-shadow: 0 6px 25px rgba(0, 0, 0, 0.1) !important;
        background: white !important;
        overflow: hidden !important;
    }

    .product-header {
        background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%) !important;
        border-bottom: 1px solid #e2e8f0 !important;
    }

    .product-header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
    }

    .product-info .product-name {
        color: #2d3748 !important;
        font-weight: 600 !important;
        margin-bottom: 4px !important;
        font-size: 1.25rem !important;
    }

    .product-info .product-count {
        color: #718096 !important;
        margin: 0 !important;
    }

    .product-totals {
        display: flex;
        gap: 12px;
        align-items: center;
    }

    .total-chip {
        font-weight: 500 !important;
        font-size: 0.9rem !important;
    }

    .weight-chip {
        background: #fef5e7 !important;
        color: #92400e !important;
        border-color: #f59e0b !important;
    }

    .amount-chip {
        background: #ecfdf5 !important;
        color: #047857 !important;
        border-color: #10b981 !important;
    }

    /* Enhanced Table */
    .table-content {
        padding: 0 !important;
    }

    .enhanced-table {
        border-radius: 0 !important;
    }

    .table-header {
        background: #f8fafc !important;
    }

    .header-cell {
        display: flex;
        align-items: center;
        gap: 8px;
        font-weight: 600 !important;
        color: #4a5568 !important;
        justify-content: center;
    }

    .table-row {
        transition: background-color 0.2s ease !important;
    }

    .table-row:hover {
        background: #f8fafc !important;
    }

    .data-cell {
        text-align: center !important;
        padding: 16px !important;
        font-size: 0.95rem !important;
    }

    .weight-data {
        color: #4a5568 !important;
        font-weight: 500 !important;
    }

    .price-data {
        color: #2563eb !important;
        font-weight: 500 !important;
    }

    .subtotal-amount {
        color: #047857 !important;
        font-weight: 600 !important;
        font-size: 1rem !important;
    }

    /* Table Footer */
    .table-footer {
        background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%) !important;
    }

    .footer-summary {
        display: flex;
        justify-content: space-around;
        align-items: center;
        padding: 16px;
        width: 100%;
    }

    .summary-item {
        display: flex;
        align-items: center;
        gap: 8px;
        color: #4a5568;
    }

    .summary-label {
        font-weight: 500;
    }

    .summary-value {
        font-weight: 600;
        font-size: 1.1rem;
    }

    .weight-total {
        color: #92400e;
    }

    .amount-total {
        color: #047857;
    }

    .summary-divider {
        width: 1px;
        height: 24px;
        background: #cbd5e0;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .receipt-container {
            padding: 12px;
        }

        .header-content {
            flex-direction: column;
            gap: 16px;
            text-align: center;
        }

        .product-header-content {
            flex-direction: column;
            gap: 12px;
            align-items: flex-start;
        }

        .product-totals {
            align-self: stretch;
            justify-content: space-between;
        }

        .footer-summary {
            flex-direction: column;
            gap: 12px;
        }

        .summary-divider {
            width: 80%;
            height: 1px;
        }

        .section-header {
            flex-direction: column;
            gap: 12px;
            align-items: flex-start;
        }
    }

    /* Print Styles */
    @@media print {
        .receipt-container {
            background: white !important;
            box-shadow: none !important;
            padding: 0 !important;
        }

        .receipt-header-section {
            background: #f8fafc !important;
            color: #2d3748 !important;
        }

        .header-text .receipt-title,
        .header-text .receipt-subtitle {
            color: #2d3748 !important;
        }
    }

    /* Animation Enhancements */
    .product-group-card {
        transition: transform 0.2s ease, box-shadow 0.2s ease !important;
    }

    .product-group-card:hover {
        transform: translateY(-2px) !important;
        box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12) !important;
    }

    .total-chip {
        transition: transform 0.2s ease !important;
    }

    .total-chip:hover {
        transform: scale(1.05) !important;
    }
</style>