@inject IClientReceiptService ClientReceiptService
@inject ILocalStorageService LocalStorageService
@inject IClientMasterProductService ClientProductService
@inject NavigationManager NavigationManager
@inject IJSRuntime JavaScript

<style>

    .mud-table-sticky-header * .mud-table-root .mud-table-head * .mud-table-cell {
        font-family: 'Poppins' !important;
        font-weight: 500 !important;
        letter-spacing: -.5px !important;
        font-size: 12px !important;
        color: #42546A !important;
    }

    .mud-table-dense * .mud-table-row .mud-table-cell {
        font-family: 'Poppins' !important;
        font-weight: 400 !important;
        letter-spacing: -.5px !important;
        font-size: 12px !important;
        color: #42546A !important;
    }

</style>

<div class="mx-2 mx-sm-0 px-2 px-sm-4 pb-4" style="display: none">

    <div id="printableContent">

        <div class="pb-4">

            <div class="d-flex flex-column">

                <div class="receipt-header">
                    <div class="d-flex flex-column align-items-center mb-3">
                        <img src="images/sys_imgs/jomar_logo.png" class="logo" />
                    </div>
                </div>
                <div class="mx-3">
                    <div class="info-section">

                        <div class="text-end mr-3">
                            <span class="date-text">
                                DATE: @Receipt.DateCreated?.ToString("MMMM d, yyyy")
                            </span>
                        </div>

                        <div class="d-flex flex-column">
                            <span>BUY AND SELL: @Receipt.BSname</span>
                            <span>CASHIER: @Receipt.CashierName</span>
                            <span>PORSYENTO (%): @Receipt.DeductedPercentage</span>
                        </div>

                        <div>
                            <span class="mb-5">Notes</span>
                            <MudTextField
                                Class="mb-5 mt-5"
                                Lines="3"
                                @bind-Value="Receipt.Notes"
                                InputType="InputType.Text"
                                Variant="Variant.Outlined"
                                Margin="Margin.Normal"
                                ReadOnly />
                        </div>
                
                    </div>
                   
                </div>

             
            </div>
        </div>

        <div class="mx-3">
             @if (Receipt.VendorExpenses.Any())
            {
                <span class="table-title">Expense</span>

                <MudTable Items="@Receipt.VendorExpenses"
                          Dense="true"
                          Hover="true"
                          Breakpoint="Breakpoint.None"
                          Style="padding-bottom: 0px;"
                          CellClass="text-center"
                          LoadingProgressColor="Color.Info">

                    <HeaderContent>
                        <MudTh Class="text-center">Amount</MudTh>
                        <MudTh Class="text-center">Category</MudTh>
                        <MudTh Class="text-center"></MudTh>
                    </HeaderContent>

                    <RowTemplate Context="expense">
                        <MudTd DataLabel="Amount" Class="text-center">P @string.Format("{0:N0}", expense.Amount)</MudTd>
                            <MudTd DataLabel="Category" Class="text-center">@categoryName[expense.VendorExpenseCategoryId] </MudTd>
                        </RowTemplate>
                    </MudTable>
            }
        </div>


        @if (Receipt.GetReceiptItemDTO.Any())
        {
            var groupItem = Receipt.GetReceiptItemDTO.GroupBy(x => x.ProductName);

            foreach (var group in groupItem)
            {

                var totalSubtotal = group.Sum(x => x.Subtotal);

                <div class="mx-3">
                    <MudGrid Class="mb-1">
                        <MudItem xs="12">
                            <span class="table-title">@group.Key</span>
                            <MudTable Items="group" FixedHeader="true" Dense="true" Breakpoint="Breakpoint.None" Style="padding-bottom: 0px;" CellClass="text-center py-1">
                                <HeaderContent>
                                    <MudTh>Weight (KG)</MudTh>
                                    <MudTh>Current Price</MudTh>
                                    <MudTh>Subtotal</MudTh>
                                </HeaderContent>
                                <RowTemplate>
                                    <MudTd DataLabel="Kilo">@context.Weight</MudTd>
                                        <MudTd DataLabel="Price">@context.CurrentPrice</MudTd>
                                        <MudTd DataLabel="Subtotal">@context.Subtotal</MudTd> <!-- Calculated Subtotal -->
                                    </RowTemplate>
                                    <FooterContent>
                                        <MudTFootRow Class="bold-text text-end">
                                            <MudTd>Total Kilo: @string.Format("{0:N2}", group.Sum(x => x.Weight))</MudTd>
                                            <MudTd>Total Benta: @string.Format("{0:N2}", group.Sum(x => x.Subtotal))</MudTd>
                                            <MudTd>Total %: P @string.Format("{0:N2}", (group.Sum(x => x.Subtotal) * (@Receipt.DeductedPercentage / 100)))</MudTd>
                                        </MudTFootRow>
                                    </FooterContent>
                                </MudTable>
                            </MudItem>
                        </MudGrid>
                </div>
            }
        }

        <div class="mx-3">

            <ReceiptBreakdown Summary="ReceiptSummaryDTO" />

        </div>
        </div>
    </div>


@code {

    [Parameter] public CreateReceiptDTO Receipt { get; set; }
    [Parameter] public ReceiptSummaryDTO ReceiptSummaryDTO { get; set; } = new ReceiptSummaryDTO();
    [Parameter] public Dictionary<int, string> categoryName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await JavaScript.InvokeVoidAsync("print_pdf", $"PAGADO_{Receipt.BSname}_{Receipt.DateCreated:MMMMd_yyyy}");
    }
}
